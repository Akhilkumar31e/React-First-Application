{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/DishDetailComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","to","id","width","body","heading","Menu","menu","dishes","map","key","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedBackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","type","rows","color","Component","RenderLeader","tag","left","object","About","leaders","title","list","Header","state","isNavOpen","isModalOpen","toggleNav","toggleModal","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","setState","Fragment","dark","expand","onClick","height","weight","isOpen","navbar","outline","toggle","innerRef","input","Footer","CommentForm","handleComment","postComment","dishId","rating","comment","RenderComments","comments","cmnts","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","RenderDish","DishDetail","undefined","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newFeedback","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","console","log","newComment","addComment","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac65809d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport {Card,CardImg, CardText, CardBody,CardTitle,CardSubtitle} from 'reactstrap';\r\nimport {Loading} from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport  {FadeTransform } from 'react-animation-components'\r\nfunction RenderCard({item, isLoading, errMess}){\r\n    if(isLoading){\r\n        return(\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <FadeTransform in \r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name}></CardImg>\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle>: null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish}\r\n                     isLoading={props.dishesLoading}\r\n                    errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion}\r\n                     isLoading={props.promosLoading}\r\n                     errMess={props.promosErrMess}  />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}\r\n                    isLoading={props.leadersLoading}\r\n                    errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    function RenderMenuItem({ dish }) {\r\n        return(\r\n            <Card>\r\n                <Link to={`/React-First-Application/menu/${dish.id}`} >\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay body className=\"ml-5\">\r\n                        <CardTitle heading>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n        const menu = props.dishes.dishes.map((dish)=>{\r\n            return (\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if(props.dishes.isLoading) {\r\n            \r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return ( \r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/React-First-Application/home'>Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Label, Col, Button,Row  }  from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { Control , Form, Errors} from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Contact extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleSubmit(values) {\r\n        //console.log(\"Current State is:\" + JSON.stringify(values));\r\n        //alert(\"Current State is:\" + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname,values.lastname,values.telnum,values.email,values.agree,values.contactType, values.message);\r\n        this.props.resetFeedBackForm();\r\n    }\r\n    render(){ \r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/React-First-Application/home'>Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Contact Us</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"www.skype.com\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3),maxLength: maxLength(15)\r\n                                        }}\r\n                                       />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".firstname\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 characters or less'\r\n                                            }}>\r\n                                        </Errors>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3),maxLength: maxLength(15)\r\n                                        }}\r\n                                     />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}>\r\n                                    </Errors> \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel.  Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3),maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                        />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}>\r\n                                    </Errors> \r\n                                        \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                        />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid email'\r\n                                        }}>\r\n                                    </Errors> \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:6,offset:2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\" /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size:3,offset:1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                    className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feeadback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" type=\"textarea\" id=\"message\" name=\"message\"\r\n                                        placeholder=\"Your feedback here\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Loading } from './LoadingComponent';\r\nimport { FadeTransform, Fade, Stagger} from 'react-animation-components';\r\n\r\nfunction RenderLeader({leader}){\r\n    return(\r\n        <Fade in>\r\n            <Media tag=\"li\">\r\n                <Media left>\r\n                    <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                </Media>\r\n                <Media body className=\"ml-5\">\r\n                    <Media heading>{leader.name}</Media>\r\n                    <Media className=\"mb-2\">{leader.designation}</Media>\r\n                    <p>{leader.description}</p>\r\n                </Media>\r\n            </Media>\r\n        </Fade>\r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <Stagger in>\r\n                <div key={leader.id} className=\"col-12 mt-5\">\r\n                    \r\n                    <RenderLeader leader={leader} />\r\n                </div>\r\n            </Stagger>\r\n        );\r\n    });\r\n    if(props.leaders.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if(props.leaders.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.leaders.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/React-First-Application/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>About Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <h2>Our History</h2>\r\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5\">\r\n                        <Card>\r\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                            <CardBody>\r\n                                <dl className=\"row p-1\">\r\n                                    <dt className=\"col-6\">Started</dt>\r\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                    <dd className=\"col-6\">$1,250,375</dd>\r\n                                    <dt className=\"col-6\">Employees</dt>\r\n                                    <dd className=\"col-6\">40</dd>\r\n                                </dl>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Card>\r\n                            <CardBody className=\"bg-faded\">\r\n                                <blockquote className=\"blockquote\">\r\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                        I'm not hungry enough to eat six.</p>\r\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                        P. Pepe, Diversion Books, 2014</cite>\r\n                                    </footer>\r\n                                </blockquote>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Corporate Leadership</h2>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <FadeTransform in \r\n                            transformProps={{\r\n                                exitTransform: 'scale(0.5) translateY(-50%)'\r\n                            }}>\r\n                            <Media list>\r\n                                {leaders}\r\n                            </Media>\r\n                        </FadeTransform>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;    ","import React, {Component} from 'react';\r\nimport { Navbar, NavbarBrand,Nav, NavbarToggler,Collapse,NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, FormGroup,Label, Input,Form} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    handleLogin(event){\r\n        this.toggleModal();\r\n        alert(\"Username:\" + this.username.value +\"Password: \"+ this.password.value+ \"Remember: \"+this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/React-First-Application/home\">\r\n                            <img src=\"C:\\Users\\Ellendula\\Desktop\\Coursera\\React\\confusion\\public\\assets\\images\\logo.png\" height=\"30\" weight=\"41\"\r\n                                 alt=\"Ristorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/React-First-Application/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/React-First-Application/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/React-First-Application/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/React-First-Application/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Log in\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses! </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\" innerRef={(input) => this.username =input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\" innerRef={(input) => this.password =input}/>\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember =input}/>\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props){\r\n    return(\r\n        <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/React-First-Application/home\">Home</Link></li>\r\n                        <li><Link to=\"/React-First-Application/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/React-First-Application/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/React-First-Application/contactus\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal,ModalHeader,ModalBody, Col,Row, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {LocalForm, Control, Errors} from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger} from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\n\r\n    class CommentForm extends Component {\r\n        constructor(props){\r\n            super(props);\r\n\r\n            this.state = {\r\n                isModalOpen: false\r\n            }\r\n            this.toggleModal = this.toggleModal.bind(this);\r\n            this.handleComment =this.handleComment.bind(this);\r\n        }\r\n\r\n        toggleModal(){\r\n            this.setState({\r\n                isModalOpen: !this.state.isModalOpen\r\n            });\r\n        }\r\n\r\n        handleComment(values) {\r\n            this.toggleModal();\r\n            this.props.postComment(this.props.dishId,values.rating, values.name, values.comment);\r\n        }\r\n\r\n        render(){\r\n            return(\r\n                <React.Fragment>\r\n                <div className=\"row\">\r\n                    <Button outline onClick={this.toggleModal}>\r\n                        <span className=\"fa fa-edit fa-lg\"></span> Submit Comment\r\n                    </Button>\r\n                </div>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        Comment \r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleComment(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={2}>Rating</Label>\r\n                                <Col md={10}>\r\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                    className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"name\" md={2}>Your Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className='form-control'\r\n                                        validators={{\r\n                                            required, minLength: minLength(3),maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less'\r\n                                           \r\n                                        }}>\r\n                                    </Errors> \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={2}>Comment</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".comment\" type=\"textarea\" id=\"comment\" name=\"comment\"\r\n                                        placeholder=\"Type Comment Here\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit Comment\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\n    function RenderComments({comments, postComment, dishId}){\r\n            if(comments!=null){\r\n                const cmnts=comments.map((comment)=>{\r\n                    return(\r\n                        <Fade in>\r\n                            <div key={comment.id} className=\"list-unstyled\">\r\n                                <li>{comment.comment}</li><br></br>\r\n                                <li>--{comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric',month: 'short',day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</li><br></br>\r\n                            </div>\r\n                        </Fade>\r\n                    );\r\n                });\r\n                return(\r\n                    <div>\r\n                        <h4>Comments</h4>\r\n                        <Stagger in>\r\n                            {cmnts}\r\n                        </Stagger>\r\n                        <CommentForm dishId={dishId} postComment={postComment}/>\r\n                    </div>\r\n                );\r\n            }\r\n            else{\r\n                return(\r\n                    <div></div>\r\n                );\r\n            }\r\n    }\r\n    function RenderDish({dish}){\r\n        if(dish!=null){\r\n            return(\r\n                <FadeTransform in \r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                    <Card>\r\n                        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            );\r\n        }\r\n        else{ \r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const DishDetail = (props) => {\r\n        if(props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.dish!==undefined){\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/React-First-Application/menu'>Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                            <RenderDish dish={props.dish} />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                            <RenderComments comments={props.comments} \r\n                                postComment={props.postComment}\r\n                                dishId={props.dish.id}/>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\nexport default DishDetail;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    }\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'feedback',{\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response => {\r\n        if(response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error= new Error('Error '+ response.status+ ': '+ response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => {alert('Your Feedback was recorded: '+JSON.stringify(response))})\r\n    .catch(error => { console.log(' Post Feedback  ', error.message)\r\n        alert('Your feedback could not be posted\\n Error: '+error.message)});\r\n}\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response => {\r\n        if(response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error= new Error('Error '+ response.status+ ': '+ response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => { console.log('Post comments ', error.message)\r\n        alert('Your comment could not be posted\\n Error: '+error.message)});\r\n    \r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if(response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error= new Error('Error '+ response.status+ ': '+ response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if(response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error= new Error('Error '+ response.status+ ': '+ response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if(response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error= new Error('Error '+ response.status+ ': '+ response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if(response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error= new Error('Error '+ response.status+ ': '+ response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n","export const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\n\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport '../App.css';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport DishDetail from './DishDetailComponent';\r\nimport {Switch, Route , Redirect, withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup , CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      promotions: state.promotions,\r\n      leaders: state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postFeedback : (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => {dispatch(fetchDishes())},\r\n  resetFeedBackForm: () => { dispatch(actions.reset('feedback')) },\r\n  fetchComments: () => {dispatch(fetchComments())},\r\n  fetchPromos: () => {dispatch(fetchPromos())},\r\n  fetchLeaders: () => {dispatch(fetchLeaders())}\r\n})\r\n\r\nclass Main extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render(){\r\n\r\n    const HomePage = () => {\r\n        return(\r\n            <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n            dishesLoading={this.props.dishes.isLoading}\r\n            dishesErrMess={this.props.dishes.errMess}\r\n            promotion={this.props.promotions.promotions.filter((promotion) => promotion.featured)[0]} \r\n            promosLoading={this.props.promotions.isLoading}\r\n            promosErrMess={this.props.promotions.errMess}\r\n            leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n            leadersLoading={this.props.leaders.isLoading}\r\n            leadersErrMess={this.props.leaders.errMess}/>\r\n        );\r\n    }\r\n    const DishWithId = ({match}) => {\r\n        return(\r\n            <DishDetail dish={this.props.dishes.dishes.filter((dish)=>dish.id === parseInt(match.params.dishId,10))[0]} \r\n                isLoading={this.props.dishes.isLoading}\r\n                errMess={this.props.dishes.errMess}\r\n                comments={this.props.comments.comments.filter((comment)=> comment.dishId === parseInt(match.params.dishId,10))}\r\n                commentsErrMess={this.props.comments.errMess}\r\n                postComment={this.props.postComment}\r\n                />\r\n\r\n        );\r\n    }\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch>\r\n                <Route path=\"/React-First-Application/home\" component={HomePage} />\r\n                <Route exact path=\"/React-First-Application/menu\" component={()=> <Menu dishes={this.props.dishes} />} />\r\n                <Route path=\"/React-First-Application/menu/:dishId\" component={DishWithId} />\r\n                <Route exact path=\"/React-First-Application/contactus\" component={() => <Contact resetFeedBackForm={this.props.resetFeedBackForm} postFeedback={this.props.postFeedback}/>} />\r\n                <Route exact path=\"/React-First-Application/aboutus\" component={()=> <About leaders={this.props.leaders} />} />\r\n                <Redirect to=\"/React-First-Application/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading:false, errMess: null, dishes: action.payload}\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading:true, errMess: null, dishes: []}\r\n        \r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading:false, errMess: action.payload, dishes: []}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state ={\r\n    errMess: null,\r\n    comments: []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading:false, errMess: null, comments: action.payload}\r\n        \r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading:false, errMess: action.payload, comments: []}\r\n\r\n        case ActionTypes.ADD_COMMENT: \r\n            var comment =action.payload;\r\n            return {...state, comments: state.comments.concat(comment)};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        promotions: []\r\n        }, action) => {\r\n        switch(action.type) {\r\n            case ActionTypes.ADD_PROMOS:\r\n                return {...state, isLoading:false, errMess: null, promotions: action.payload}\r\n\r\n            case ActionTypes.PROMOS_LOADING:\r\n                return {...state, isLoading:true, errMess: null, promotions: []}\r\n            \r\n            case ActionTypes.PROMOS_FAILED:\r\n                return {...state, isLoading:false, errMess: action.payload, promotions: []}\r\n\r\n            default:\r\n                return state;\r\n        }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        leaders: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading:false, errMess: null, leaders: action.payload}\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading:true, errMess: null, leaders: []}\r\n        \r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading:false, errMess: action.payload, leaders: []}\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname:'',\r\n    lastname:'',\r\n    telnum:'',\r\n    email:'',\r\n    agree:false,\r\n    contactType: 'Tel.',\r\n    message:''\r\n}","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\nclass App extends Component {\n  render(){\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n\r\n    const store=createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n    return store;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}